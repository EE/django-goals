[tool.poetry]
name = "django-goals"
version = "0.6.1"
description = ""
authors = []
readme = "README.md"
license = "MIT"
packages = [
    { include = "django_goals" },
]

[tool.poetry.dependencies]
python = "^3.13"
django = ">=4.2"
django-object-actions = ">=4.3"


[tool.poetry.group.dev.dependencies]
pytest-django = "*"
pytest-cov = "*"
factory-boy = "*"
flake8 = "*"
flake8-isort = "*"
flake8-pyproject = "*"
django-environ = "*"
psycopg = "*"
pylint = "*"
pylint-django = "*"
cosmic-ray = "*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "example_project.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
FAIL_INVALID_TEMPLATE_VARS = true
addopts = "--reuse-db"

[tool.flake8]
ignore = [
    "E501",  # line too long
    "W504",  # line break after binary operator
]

[tool.isort]
skip_gitignore = true
lines_after_imports = 2
# 5 = Hanging Grid Grouped
multi_line_output = 5
include_trailing_comma = true

[tool.pylint.format]
recursive = "yes"
load-plugins = [
    "pylint_django",
]
disable = [
    "line-too-long",
    "missing-docstring",
    "duplicate-code",  # TODO: maybe enable someday?
    "invalid-name",
    "use-dict-literal",
    "too-many-arguments",
    "too-few-public-methods",
    "too-many-ancestors",
]

[tool.pylint.pylint_django]
django-settings-module = "example_project.settings"
